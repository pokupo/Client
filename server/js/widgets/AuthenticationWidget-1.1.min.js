var AuthenticationWidget=function(){function t(){e(),i(),n()}function e(){var t=s.GetInputParameters("authentication");$.isEmptyObject(t)||(h=s.UpdateSettings1(h,t),t.https&&(Parameters.cache.https=t.https)),Config.Authentication=h}function n(){"login"==Routing.route?s.BaseLoad.Tmpl(h.tmpl,function(){a()}):s.WidgetLoader(!0)}function i(){s.AddEvent("w.change.route",function(){n()}),s.AddEvent("AuthW.submit",function(t){s.BaseLoad.Login(t.username,t.password,t.rememberMe,function(e){s.DispatchEvent("w.auth.test",{data:t,request:e})})}),s.AddEvent("w.auth.test",function(t){t.request.err?(t.data.error="Ошибка в логине или пароле",r(t.data)):s.DispatchEvent("w.auth.ok",t)}),s.AddEvent("w.auth.ok",function(){if("registration"!=Routing.route){var t=Parameters.cache.lastPage;"login"!=t.route&&t.route?Routing.SetHash(t.route,t.title,t.data):Routing.SetHash("default","Домашняя",{})}}),s.AddEvent("w.auth.close",function(){o()})}function a(){"login"==Routing.route&&(u(),c())}function o(){s.ClearContainer(h)}function u(){s.InsertContainer(h)}function c(){s.BaseLoad.Script(PokupoWidgets.model.auth,function(){AuthenticationViewModel.prototype.ClickRegistration=function(){Parameters.cache.lastPage=Parameters.cache.history[Parameters.cache.history.length-2],Routing.SetHash("registration","Регистрация пользователя",{step:1})};var t=new AuthenticationViewModel;t.subminEvent("AuthW.submit"),r(t)})}function r(t){s.RenderTemplate(t,h,null,function(t){u(),r(t)},function(){o()})}var s=this;s.widgetName="AuthenticationWidget",s.version=1.1,s.minWidgetVersion=1,s.maxWidgetVersion=2,s.minTmplVersion=1,s.maxTmplVersion=2,s.InitWidget=t;var h={container:{widget:"authenticationWidgetId",def:"defaultAuthenticationWidgetId"},animate:"function"==typeof AnimateAuthentication?AnimateAuthentication:null,https:"login",tmpl:{path:"authenticationTmpl.html",id:"authenticationFormTmpl"},message:{pleaseLogIn:"Необходимо авторизоваться.",confirmLogOut:"Вы действительно хотите выйти?"}}},TestAuthentication={Init:function(){if("function"==typeof Widget){AuthenticationWidget.prototype=new Widget;var t=new AuthenticationWidget;t.Init(t)}else setTimeout(function(){TestAuthentication.Init()},100)}};TestAuthentication.Init();