var AuthenticationWidget=function(){var k=this;k.widgetName="AuthenticationWidget";k.version=1.1;k.minWidgetVersion=1;k.maxWidgetVersion=2;k.minTmplVersion=1;k.maxTmplVersion=2;k.InitWidget=i;var g={container:{widget:"authenticationWidgetId",def:"defaultAuthenticationWidgetId"},animate:typeof AnimateAuthentication=="function"?AnimateAuthentication:null,https:"login",tmpl:{path:"authenticationTmpl.html",id:"authenticationFormTmpl"},message:{pleaseLogIn:"Необходимо авторизоваться.",confirmLogOut:"Вы действительно хотите выйти?"}};function i(){b();j();d()}function b(){var l=k.GetInputParameters("authentication");if(!$.isEmptyObject(l)){g=k.UpdateSettings1(g,l);if(l.https){Parameters.cache.https=l.https}}Config.Containers.authentication=g.container}function d(){if(Routing.route=="login"){k.BaseLoad.Tmpl(g.tmpl,function(){c()})}else{k.WidgetLoader(true)}}function j(){k.AddEvent("w.change.route",function(){d()});k.AddEvent("AuthW.submit",function(l){k.BaseLoad.Login(l.username,l.password,l.rememberMe,function(m){k.DispatchEvent("w.auth.test",{data:l,request:m})})});k.AddEvent("w.auth.test",function(l){if(l.request.err){l.data.error="Ошибка в логине или пароле";h(l.data)}else{k.DispatchEvent("w.auth.ok",l)}});k.AddEvent("w.auth.ok",function(){if(Routing.route!="registration"){var l=Parameters.cache.lastPage;if(l.route=="login"||!l.route){Routing.SetHash("default","Домашняя",{})}else{Routing.SetHash(l.route,l.title,l.data)}}});k.AddEvent("w.auth.close",function(){a()})}function c(){if(Routing.route=="login"){e();f()}}function a(){k.ClearContainer(g)}function e(){k.InsertContainer(g)}function f(){k.BaseLoad.Script(PokupoWidgets.model.auth,function(){AuthenticationViewModel.prototype.ClickRegistration=function(){Parameters.cache.lastPage=Parameters.cache.history[Parameters.cache.history.length-2];Routing.SetHash("registration","Регистрация пользователя",{step:1})};var l=new AuthenticationViewModel();l.subminEvent("AuthW.submit");h(l)})}function h(l){k.RenderTemplate(l,g,null,function(m){e();h(m)},function(){a()})}};var TestAuthentication={Init:function(){if(typeof Widget=="function"){AuthenticationWidget.prototype=new Widget();var a=new AuthenticationWidget();a.Init(a)}else{setTimeout(function(){TestAuthentication.Init()},100)}}};TestAuthentication.Init();